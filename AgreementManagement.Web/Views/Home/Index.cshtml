@using AgreementManagement.Web.Models.Home
@model AgreementManagerModel
@{
    ViewData["Title"] = "Manager";
}

<div class="container-fluid bg-white-transparent p-3">
    <partial name="_TabsPartial">

    <partial name="_TablePartial" for="@Model">
</div>

<partial name="_AgreementFormPartial" for="@Model">

<partial name="_RemovePromptPartial">



@section Scripts{
    <script>
        var currentAgreementRow;

        $(document).ready(function () {

            var table = $("#agreementTable").DataTable({
                ajax: {
                    "url": "/Home/AgreementTable",
                    "type": "GET",
                    "datatype": "json"
                },
                columns: [
                    {
                        "data": "userName",
                        "render": function (userName, type, full, meta) {
                            return "<p class='m-0'><i class='far fa-user-circle ml-2'></i><span class='ml-3'>" + userName + "</span></p>"
                        }
                    },
                    {
                        "data": "productGroupCode",
                        "render": function (productGroupCode, type, full, meta) {
                            return "<p class='m-0' data-toggle='tooltip' data-placement='top' title='" + full.productGroupDescription + "'>" + productGroupCode + "</p>"
                        }
                    },
                    {
                        "data": "productNumber",
                        "render": function (productNumber, type, full, meta) {
                            return "<p class='m-0' data-toggle='tooltip' data-placement='top' title='" + full.productDescription + "'>" + productNumber + "</p>"
                        }
                    },
                    {
                        "data": "effectiveDate",
                        "render": function (effectiveDate) {
                            return getFormattedDate(effectiveDate);
                        },
                        "searchable": false
                    },
                    {
                        "data": "expirationDate",
                        "render": function (expirationDate) {
                            return getFormattedDate(expirationDate);
                        },
                        "searchable": false
                    },
                    {
                        "data": "productPrice",
                        "render": function (productPrice) {
                            return "<span class='float-right'>$" + productPrice + "</span>";
                        },
                        "searchable": false
                    },
                    {
                        "data": "newPrice",
                        "render": function (newPrice) {
                            return "<span class='float-right'>$" + newPrice + "</span>";
                        },
                        "searchable": false
                    },
                    {
                        "defaultContent": "<div class='btn-group btn-block'><button class='btn btn-sm text-secondary AgreementEditBtn'><i class='fas fa-pencil-alt'></i> Edit</button> <button class='btn btn-sm text-danger AgreementRemoveBtn'><i class='far fa-trash-alt'></i> Remove</button></div>",
                        "orderable": false,
                        "searchable": false
                    }
                ],
                responsive: true,
                "initComplete": function () {
                    initializeTooltips();
                },
                "drawCallback": function () {
                    initializeTooltips();
                }
            });

            $("#NewAgreementSaveBtn").click(function (e) {
                e.preventDefault();
                clearNewAgreementFormValidation();

                var formData = $("#NewAgreementModalForm").serialize();
                var url;
                var method;

                // EDIT
                if ($("#hiddenAgreementId").val()) {
                    url = "@Url.Action("EditAgreement")";
                    method = "PUT";
                }
                // ADD
                else {
                    url = "@Url.Action("AddAgreement")";
                    method = "POST";
                }

                $.ajax({
                    url: url,
                    type: method,
                    data: formData,
                    success: function () {
                        $("#NewAgreementModal").modal("toggle");
                        table.ajax.reload();
                        clearNewAgreementForm();
                        initializeTooltips();
                    },
                    error: function (data) {
                        var response = JSON.parse(data.responseText);
                        setValidationErrors(response, "#NewAgreementModalForm");
                    }
                });
            });

            $("#agreementTable").on("click", ".AgreementEditBtn", function (e) {
                e.preventDefault();
                var currentRow = $(this).closest("tr");
                var agreementRow = $("#agreementTable").DataTable().row(currentRow).data();
                currentAgreementRow = agreementRow;

                populateFormData();

                $("#NewAgreementModal").modal("toggle");
            });

            $("#agreementTable").on("click", ".AgreementRemoveBtn", function (e) {
                e.preventDefault();
                var currentRow = $(this).closest("tr");
                var agreementRow = $("#agreementTable").DataTable().row(currentRow).data();
                currentAgreementRow = agreementRow;
                openRemovePrompt();
            });

            $("#RemovePromptModal").on("click", "#AgreementRemovePromptBtn", function (e) {
                e.preventDefault();
                var agreementId = currentAgreementRow.id;
                var url = "@Url.Action("RemoveAgreement")";

                $.ajax({
                    url: url + "?" + $.param({ "Id": agreementId }),
                    type: 'DELETE',
                    success: function () {
                        $('#RemovePromptModal').modal('toggle');
                        table.ajax.reload();
                        initializeTooltips();
                    },
                    error: function () {
                        $('#RemovePromptModal').modal('toggle');
                        alert("Something went wrong. Try again later...");
                    }
                });
            });

            $("#NewAgreementModalCloseBtn").click(function () {
                clearNewAgreementForm();
            });

            function populateFormData() {
                $("#hiddenAgreementId").val(currentAgreementRow.id);
                $("#NewAgreementModalForm select[name='ProductGroupId']").val(currentAgreementRow.productGroupCode).change();
                $("#NewAgreementModalForm select[name='ProductId']").val(currentAgreementRow.productId).change();
                $("#NewAgreementModalForm input[name='NewPrice']").val(currentAgreementRow.newPrice).change();
                $("#NewAgreementModalForm input[name='EffectiveDate']").val(removeTimeFromDate(currentAgreementRow.effectiveDate)).change();
                $("#NewAgreementModalForm input[name='ExpirationDate']").val(removeTimeFromDate(currentAgreementRow.expirationDate)).change();
            }

            function openRemovePrompt() {
                $("#RemovePromptModalText").text("");
                $("#RemovePromptModalText").append("ID: " + currentAgreementRow.id);
                $("#RemovePromptModalText").append("<br>NEW PRICE: " + currentAgreementRow.newPrice);
                $("#RemovePromptModal").modal("toggle");
            }

            function initializeTooltips() {
                $("[data-toggle='tooltip']").tooltip();
            }

            function clearNewAgreementFormValidation() {
                $("#NewAgreementModalForm .custom-invalid-tooltip").html("");
                $("#NewAgreementModalForm .custom-invalid-tooltip").removeClass("custom-invalid-tooltip");
                $("#NewAgreementModalForm .is-invalid").removeClass("is-invalid");
            }

            function clearNewAgreementForm() {
                $(":input", "#NewAgreementModalForm")
                    .not(":button, :submit, :reset, :hidden")
                    .val("")
                    .removeAttr("checked")
                    .removeAttr("selected");
                $("#hiddenAgreementId").val("");
                clearNewAgreementFormValidation();
            }

            function setValidationErrors(response, formId) {
                for (var i = 0; i < response.length; i++) {
                    var error = response[i];
                    var fieldName = error.key;
                    var errorMessage = error.message;

                    $(formId + " #" + fieldName + "ValidationMessage").text(errorMessage);
                    $(formId + " #" + fieldName + "ValidationMessage").addClass("custom-invalid-tooltip");
                    $(formId + " [name='" + fieldName + "']").addClass("is-invalid");
                }
            }

            function getFormattedDate(stringDate) {
                var date = new Date(stringDate);
                let year = date.getFullYear();
                let month = (1 + date.getMonth()).toString().padStart(2, '0');
                let day = date.getDate().toString().padStart(2, '0');

                return month + '/' + day + '/' + year;
            }

            function removeTimeFromDate(stringDate) {
                return stringDate.split("T")[0];
            }
        });
    </script>
}
