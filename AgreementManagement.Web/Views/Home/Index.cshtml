@using AgreementManagement.Web.Models.Home
@model AgreementManagerModel
@{
    ViewData["Title"] = "Manager";
}

<div class="container-fluid bg-white-transparent p-3">

    @* ***************** TABS ****************** *@

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link text-dark active" data-toggle="collapse" href="#agreementCard"><i class='far fa-file-alt'></i> Agreements</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" data-toggle="collapse" href="#productsCard">Products</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" data-toggle="collapse" href="#productGroupsCard">Product Groups</a>
        </li>
    </ul>

    @* ***************** TABLE ****************** *@

    <div id="accordion">
        <div class="card">
            <div id="agreementCard" class="collapse show" data-parent="#accordion">
                <div class="card-header">
                    <p class="h2 mb-3">Manager <span class="small text-muted">| Agreements</span></p>
                    <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#NewAgreementModal"><i class='far fa-plus-square'></i> New Agreement</button>
                </div>
                <div class="card-body table-responsive">

                    <table id="agreementTable" class="nowrap table table-sm table-striped table-bordered bg-light">
                        <thead>
                            <tr>
                                <th>Username</th>
                                <th>Product Group Code</th>
                                <th>Product Number</th>
                                <th>Effective Date</th>
                                <th>Expiration Date</th>
                                <th>Product Price</th>
                                <th>New Price</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Username</th>
                                <th>Product Group Code</th>
                                <th>Product Number</th>
                                <th>Effective Date</th>
                                <th>Expiration Date</th>
                                <th>Product Price</th>
                                <th>New Price</th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            <div id="productsCard" class="collapse" data-parent="#accordion">
                <div class="card-body">
                    Lorem ipsum..
                </div>
            </div>

            <div id="productGroupsCard" class="collapse" data-parent="#accordion">
                <div class="card-body">
                    Lorem ipsum..
                </div>
            </div>
        </div>
    </div>

</div>

@* ***************** FORM MODAL ****************** *@

<div class="modal fade" id="NewAgreementModal" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <p class="modal-title h6">New Agreement</p>
            </div>

            <div class="modal-body">
                <form id="NewAgreementModalForm" method="post">

                    <div class="row">
                        <div class="col border-right">
                            <div class="form-group position-relative">
                                <label for="productGroup">Group:</label>
                                <select class="form-control form-control-sm" id="productGroup" name="ProductGroupId">
                                    <option value=""> </option>
                                    @foreach (var group in Model.ProductGroupList)
                                    {
                                        <option value="@group.Id">@group.GroupDescription</option>
                                    }
                                </select>
                                <div id="ProductGroupIdValidationMessage"></div>
                            </div>
                            <div class="form-group position-relative">
                                <label for="product">Product:</label>
                                <select class="form-control form-control-sm" id="product" name="ProductId">
                                    <option value=""> </option>
                                    @foreach (var product in Model.ProductList)
                                    {
                                        <option value="@product.Id">@product.ProductDescription</option>
                                    }
                                </select>
                                <div id="ProductIdValidationMessage"></div>
                            </div>

                            <label for="newPrice">New Price:</label>
                            <div class="input-group mb-3 position-relative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class='fas fa-dollar-sign'></i></span>
                                </div>
                                <input type="number" class="form-control form-control-sm w-50" id="newPrice" name="NewPrice" value="0">
                                <div id="NewPriceValidationMessage"></div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-group position-relative">
                                <label for="effectiveDate">Effective Date:</label>
                                <input type="date" class="form-control form-control-sm" id="effectiveDate" name="EffectiveDate">
                                <div id="EffectiveDateValidationMessage"></div>
                            </div>
                            <div class="form-group position-relative">
                                <label for="expirationDate">Expiration Date:</label>
                                <input type="date" class="form-control form-control-sm" id="expirationDate" name="ExpirationDate">
                                <div id="ExpirationDateValidationMessage"></div>
                            </div>
                            <div class="custom-control custom-checkbox mb-3">
                                <input type="checkbox" class="custom-control-input" id="activeCheckBox" name="Active">
                                <label class="custom-control-label" for="activeCheckBox">Active</label>
                            </div>
                        </div>
                    </div>

                    <div class="float-right">
                        <button class="btn btn-sm btn-primary" id="NewAgreementSaveBtn">Save</button>
                        <button class="btn btn-sm btn-outline-light text-dark" data-dismiss="modal" id="NewAgreementModalCloseBtn"><i class='far fa-trash-alt'></i> Discard</button>
                    </div>

                    <input type="hidden" name="UserName" value="@User.Identity.Name" />
                    <input id="hiddenAgreementId" type="hidden" name="Id" value="" />
                </form>
            </div>

        </div>
    </div>
</div>

@* ***************** REMOVE PROMPT ****************** *@

<div class="modal" id="RemovePromptModal" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title text-danger">Warning</h4>
            </div>

            <div class="modal-body">
                Are you sure you want to remove this agreement?
                <p id="RemovePromptModalText" class="mt-3 small text-danger pl-3"></p>
            </div>

            <div class="modal-footer">
                <button id="AgreementRemovePromptBtn" type="button" class="btn btn-sm btn-outline-danger"><i class='far fa-trash-alt'></i> Yes</button>
                <button type="button" class="btn btn-sm btn-danger" data-dismiss="modal">No</button>
            </div>

        </div>
    </div>
</div>

@section Scripts{
    <script>
        var currentAgreementRow;

        $(document).ready(function () {

            var table = $("#agreementTable").DataTable({
                ajax: {
                    "url": "/Home/AgreementTable",
                    "type": "GET",
                    "datatype": "json"
                },
                columns: [
                    {
                        "data": "userName",
                        "render": function (userName, type, full, meta) {
                            return "<p class='m-0'><i class='far fa-user-circle ml-2'></i><span class='ml-3'>" + userName + "</span></p>"
                        }
                    },
                    {
                        "data": "productGroupCode",
                        "render": function (productGroupCode, type, full, meta) {
                            return "<p class='m-0' data-toggle='tooltip' data-placement='top' title='" + full.productGroupDescription + "'>" + productGroupCode + "</p>"
                        }
                    },
                    {
                        "data": "productNumber",
                        "render": function (productNumber, type, full, meta) {
                            return "<p class='m-0' data-toggle='tooltip' data-placement='top' title='" + full.productDescription + "'>" + productNumber + "</p>"
                        }
                    },
                    {
                        "data": "effectiveDate",
                        "render": function (effectiveDate) {
                            return getFormattedDate(effectiveDate);
                        },
                        "searchable": false
                    },
                    {
                        "data": "expirationDate",
                        "render": function (expirationDate) {
                            return getFormattedDate(expirationDate);
                        },
                        "searchable": false
                    },
                    {
                        "data": "productPrice",
                        "render": function (productPrice) {
                            return "<span class='float-right'>$" + productPrice + "</span>";
                        },
                        "searchable": false
                    },
                    {
                        "data": "newPrice",
                        "render": function (newPrice) {
                            return "<span class='float-right'>$" + newPrice + "</span>";
                        },
                        "searchable": false
                    },
                    {
                        "defaultContent": "<div class='btn-group btn-block'><button class='btn btn-sm text-secondary AgreementEditBtn'><i class='fas fa-pencil-alt'></i> Edit</button> <button class='btn btn-sm text-danger AgreementRemoveBtn'><i class='far fa-trash-alt'></i> Remove</button></div>",
                        "orderable": false,
                        "searchable": false
                    }
                ],
                responsive: true,
                "initComplete": function () {
                    initializeTooltips();
                },
                "drawCallback": function () {
                    initializeTooltips();
                }
            });

            $("#NewAgreementSaveBtn").click(function (e) {
                e.preventDefault();
                clearNewAgreementFormValidation();

                var formData = $("#NewAgreementModalForm").serialize();
                var url;
                var method;

                // EDIT
                if ($("#hiddenAgreementId").val()) {
                    url = "@Url.Action("EditAgreement")";
                    method = "PUT";
                }
                // ADD
                else {
                    url = "@Url.Action("AddAgreement")";
                    method = "POST";
                }

                $.ajax({
                    url: url,
                    type: method,
                    data: formData,
                    success: function () {
                        $("#NewAgreementModal").modal("toggle");
                        table.ajax.reload();
                        clearNewAgreementForm();
                        initializeTooltips();
                    },
                    error: function (data) {
                        var response = JSON.parse(data.responseText);
                        setValidationErrors(response, "#NewAgreementModalForm");
                    }
                });
            });

            $("#agreementTable").on("click", ".AgreementEditBtn", function (e) {
                e.preventDefault();
                var currentRow = $(this).closest("tr");
                var agreementRow = $("#agreementTable").DataTable().row(currentRow).data();
                currentAgreementRow = agreementRow;

                populateFormData();

                $("#NewAgreementModal").modal("toggle");
            });

            $("#agreementTable").on("click", ".AgreementRemoveBtn", function (e) {
                e.preventDefault();
                var currentRow = $(this).closest("tr");
                var agreementRow = $("#agreementTable").DataTable().row(currentRow).data();
                currentAgreementRow = agreementRow;
                openRemovePrompt();
            });

            $("#RemovePromptModal").on("click", "#AgreementRemovePromptBtn", function (e) {
                e.preventDefault();
                var agreementId = currentAgreementRow.id;
                var url = "@Url.Action("RemoveAgreement")";

                $.ajax({
                    url: url + "?" + $.param({ "Id": agreementId }),
                    type: 'DELETE',
                    success: function () {
                        $('#RemovePromptModal').modal('toggle');
                        table.ajax.reload();
                        initializeTooltips();
                    },
                    error: function () {
                        $('#RemovePromptModal').modal('toggle');
                        alert("Something went wrong. Try again later...");
                    }
                });
            });

            $("#NewAgreementModalCloseBtn").click(function () {
                clearNewAgreementForm();
            });

            function populateFormData() {
                $("#hiddenAgreementId").val(currentAgreementRow.id);
                $("#NewAgreementModalForm select[name='ProductGroupId']").val(currentAgreementRow.productGroupCode).change();
                $("#NewAgreementModalForm select[name='ProductId']").val(currentAgreementRow.productId).change();
                $("#NewAgreementModalForm input[name='NewPrice']").val(currentAgreementRow.newPrice).change();
                $("#NewAgreementModalForm input[name='EffectiveDate']").val(removeTimeFromDate(currentAgreementRow.effectiveDate)).change();
                $("#NewAgreementModalForm input[name='ExpirationDate']").val(removeTimeFromDate(currentAgreementRow.expirationDate)).change();
            }

            function openRemovePrompt() {
                $("#RemovePromptModalText").text("");
                $("#RemovePromptModalText").append("ID: " + currentAgreementRow.id);
                $("#RemovePromptModalText").append("<br>NEW PRICE: " + currentAgreementRow.newPrice);
                $("#RemovePromptModal").modal("toggle");
            }

            function initializeTooltips() {
                $("[data-toggle='tooltip']").tooltip();
            }

            function clearNewAgreementFormValidation() {
                $("#NewAgreementModalForm .custom-invalid-tooltip").html("");
                $("#NewAgreementModalForm .custom-invalid-tooltip").removeClass("custom-invalid-tooltip");
                $("#NewAgreementModalForm .is-invalid").removeClass("is-invalid");
            }

            function clearNewAgreementForm() {
                $(":input", "#NewAgreementModalForm")
                    .not(":button, :submit, :reset, :hidden")
                    .val("")
                    .removeAttr("checked")
                    .removeAttr("selected");
                $("#hiddenAgreementId").val("");
                clearNewAgreementFormValidation();
            }

            function setValidationErrors(response, formId) {
                for (var i = 0; i < response.length; i++) {
                    var error = response[i];
                    var fieldName = error.key;
                    var errorMessage = error.message;

                    $(formId + " #" + fieldName + "ValidationMessage").text(errorMessage);
                    $(formId + " #" + fieldName + "ValidationMessage").addClass("custom-invalid-tooltip");
                    $(formId + " [name='" + fieldName + "']").addClass("is-invalid");
                }
            }

            function getFormattedDate(stringDate) {
                var date = new Date(stringDate);
                let year = date.getFullYear();
                let month = (1 + date.getMonth()).toString().padStart(2, '0');
                let day = date.getDate().toString().padStart(2, '0');

                return month + '/' + day + '/' + year;
            }

            function removeTimeFromDate(stringDate) {
                return stringDate.split("T")[0];
            }
        });
    </script>
}
